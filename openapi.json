{
  "openapi": "3.1.0",
  "info": {
    "title": "GitHub File Proxy + Promote Patch Tool",
    "version": "1.2.0",
    "description": "Fetch GitHub repo files and generate patch metadata for AI-native delivery."
  },
  "servers": [
    {
      "url": "https://ai-delivery-framework-production.up.railway.app",
      "description": "Production server"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {}
  },
  "paths": {
    "/getFile": {
      "post": {
        "operationId": "getFile",
        "summary": "Fetch file from GitHub repo (optionally by branch or ref)",
        "tags": ["GitHub Files"],
        "x-gpt-action": {
          "name": "Fetch Single GitHub File"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["repo_name", "path"],
                "properties": {
                  "repo_name": { "type": "string" },
                  "path": { "type": "string" },
                  "ref": {
                    "type": "string",
                    "description": "Optional Git ref (branch, tag, or commit SHA)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "GitHub file response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "path": { "type": "string" },
                    "sha": { "type": "string" },
                    "content": { "type": "string" },
                    "ref": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/batch-files": {
      "post": {
        "operationId": "getBatchFiles",
        "summary": "Fetch multiple GitHub files via body input",
        "tags": ["GitHub Files"],
        "x-gpt-action": {
          "name": "Fetch Multiple GitHub Files"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["repo_name", "paths"],
                "properties": {
                  "repo_name": { "type": "string" },
                  "paths": {
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "ref": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "path": { "type": "string" },
                          "content": { "type": "string" },
                          "error": { "type": "string" }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tasks/update_metadata": {
        "patch": {
          "operationId": "updateTaskMetadata",
          "summary": "Update metadata fields for a task",
          "tags": ["Tasks"],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["repo_name", "task_id"],
                  "properties": {
                    "repo_name": { "type": "string" },
                    "task_id": { "type": "string" },
                    "description": { "type": "string" },
                    "prompt": { "type": "string" },
                    "inputs": { "type": "array", "items": { "type": "string" } },
                    "outputs": { "type": "array", "items": { "type": "string" } },
                    "ready": { "type": "boolean" },
                    "done": { "type": "boolean" }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Task metadata updated successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": { "type": "string" },
                      "task_id": { "type": "string" },
                      "updated_task_metadata": { "type": "object" }
                    }
                  }
                }
              }
            },
            "404": { "description": "Task not found" }
          }
        }
      },
      "/tasks/list": {
        "get": {
          "operationId": "listTasks",
          "summary": "List tasks from GitHub task.yaml",
          "tags": ["Tasks"],
          "x-gpt-action": {
            "name": "List All Tasks"
          },
          "parameters": [
            { "name": "status", "in": "query", "required": false, "schema": { "type": "string" } },
            { "name": "pod_owner", "in": "query", "required": false, "schema": { "type": "string" } },
            { "name": "category", "in": "query", "required": false, "schema": { "type": "string" } }
          ],
          "responses": {
            "200": {
              "description": "List of tasks",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "tasks": {
                        "type": "object",
                        "additionalProperties": { "type": "object" }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Error fetching task.yaml"
            }
          }
        }
      },
      "/tasks/activate": {
        "post": {
          "operationId": "activateTask",
          "summary": "Activate one or more tasks by updating their status to planned",
          "tags": ["Tasks"],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["repo_name", "task_id"],
                  "properties": {
                    "repo_name": { "type": "string" },
                    "task_id": {
                      "oneOf": [
                        { "type": "string" },
                        { "type": "array", "items": { "type": "string" } }
                      ]
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Tasks successfully activated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": { "type": "string" },
                      "planned_tasks": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "task_id": { "type": "string" },
                            "pod_owner": { "type": "string" },
                            "metadata": { "type": "object" }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/tasks/clone": {
        "post": {
          "operationId": "cloneTask",
          "summary": "Clone an existing task and generate a new task ID and metadata",
          "tags": ["Tasks"],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["repo_name", "original_task_id", "descriptor"],
                  "properties": {
                    "repo_name": { "type": "string" },
                    "original_task_id": { "type": "string" },
                    "descriptor": { "type": "string" }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Task cloned and new task ID generated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": { "type": "string" },
                      "new_task_id": { "type": "string" },
                      "cloned_task_metadata": { "type": "object" }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/tasks/{task_id}": {
        "get": {
          "operationId": "getTaskDetails",
          "summary": "Return full metadata for a task",
          "tags": ["Tasks"],
          "x-gpt-action": {
            "name": "Get Task Details"
          },
          "parameters": [
            {
              "name": "task_id",
              "in": "path",
              "required": true,
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": {
              "description": "Metadata for a single task",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "task_id": { "type": "string" },
                      "metadata": { "type": "object" }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Task not found"
            }
          }
        }
      },
      "/tasks/create": {
        "post": {
          "operationId": "createNewTask",
          "summary": "Create a new custom task from scratch",
          "tags": ["Tasks"],
          "x-gpt-action": {
            "name": "Create New Task"
          },
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["phase", "category", "description", "pod_owner", "descriptor"],
                  "properties": {
                    "phase": { "type": "string" },
                    "category": { "type": "string" },
                    "description": { "type": "string" },
                    "pod_owner": { "type": "string" },
                    "inputs": { "type": "array", "items": { "type": "string" } },
                    "outputs": { "type": "array", "items": { "type": "string" } },
                    "descriptor": { "type": "string" }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Returns newly created task metadata and updated task list",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": { "type": "string" },
                      "new_task_id": { "type": "string" },
                      "new_task_metadata": { "type": "object" },
                      "updated_tasks": { "type": "object" }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/memory/index": {
        "post": {
          "operationId": "indexMemory",
          "summary": "Index files into memory.yaml",
          "tags": ["Memory"],
          "x-gpt-action": {
            "name": "Index Memory Files"
          },
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["repo_name"],
                  "properties": {
                    "repo_name": { "type": "string" },
                    "base_paths": {
                      "type": "array",
                      "items": { "type": "string" }
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success message with item count",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": { "type": "string" }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/memory/diff": {
        "post": {
          "operationId": "memoryDiff",
          "summary": "Detect missing files in memory.yaml compared to GitHub repo",
          "tags": ["Memory"],
          "x-gpt-action": {
            "name": "Diff Memory Files"
          },
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["repo_name", "base_paths"],
                  "properties": {
                    "repo_name": { "type": "string" },
                    "base_paths": {
                      "type": "array",
                      "items": { "type": "string" }
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "List of missing files",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": { "type": "string" },
                      "missing_files": {
                        "type": "array",
                        "items": { "type": "string" }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/memory/add": {
        "post": {
          "operationId": "addToMemory",
          "summary": "Add new files to memory.yaml",
          "tags": ["Memory"],
          "x-gpt-action": {
            "name": "Add Files to Memory"
          },
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["repo_name", "files"],
                  "properties": {
                    "repo_name": { "type": "string" },
                    "files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": ["path"],
                        "properties": {
                          "path": { "type": "string" },
                          "description": { "type": "string" },
                          "tags": {
                            "type": "array",
                            "items": { "type": "string" }
                          },
                          "pod_owner": { "type": "string" }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "New memory entries added",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": { "type": "string" },
                      "memory_index": {
                        "type": "array",
                        "items": { "type": "object" }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/memory/validate-files": {
        "post": {
          "operationId": "validateMemoryFileExists",
          "summary": "Validate that files exist in memory.yaml and GitHub",
          "tags": ["Memory"],
          "x-gpt-action": {
            "name": "Validate Memory Files"
          },
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["repo_name", "files"],
                  "properties": {
                    "repo_name": { "type": "string" },
                    "files": {
                      "type": "array",
                      "items": { "type": "string" }
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Validation results",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "validated_files": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "file_path": { "type": "string" },
                            "exists_in_memory": { "type": "boolean" },
                            "exists_in_github": { "type": "boolean" }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/memory/search": {
        "post": {
          "operationId": "searchMemory",
          "summary": "Search memory.yaml for keyword matches",
          "tags": ["Memory"],
          "x-gpt-action": {
            "name": "Search Memory by Keyword"
          },
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["repo_name", "keyword"],
                  "properties": {
                    "repo_name": { "type": "string" },
                    "keyword": { "type": "string" }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Matching memory entries",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "matches": {
                        "type": "array",
                        "items": { "type": "object" }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/actions/list": {
        "get": {
          "operationId": "listAvailableActions",
          "summary": "List available tools and capabilities",
          "description": "Returns a grouped list of actions that the GPT can perform.",
          "tags": ["Utilities"],
          "x-gpt-action": {
            "name": "List Available Actions"
          },
          "responses": {
            "200": {
              "description": "List of available actions grouped by category",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "actions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "category": { "type": "string" },
                            "actions": {
                              "type": "array",
                              "items": { "type": "string" }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/metrics/summary": {
        "get": {
          "operationId": "getMetricsSummary",
          "summary": "Fetch the current project delivery and reasoning metrics summary",
          "tags": ["Metrics"],
          "x-gpt-action": {
            "name": "Get Delivery Metrics Summary"
          },
          "responses": {
            "200": {
              "description": "Metrics summary retrieved successfully",
              "content": {
                "application/json": {
                  "example": {
                    "timestamp": "2025-04-25T22:30:00Z",
                    "quantitative": {
                      "total_tasks": 20,
                      "completed_tasks": 15,
                      "completion_rate_percent": 75.0,
                      "average_cycle_time_days": 2.1,
                      "patch_success_rate_percent": null
                    },
                    "qualitative": {
                      "average_thought_quality_score": 4.2,
                      "recall_usage_percent": 65.0,
                      "novelty_rate_percent": 80.0
                    },
                    "reasoning_summary": "Summary text of project-level AI thinking themes."
                  }
                }
              }
            }
          }
        }
      },
      "/project/init_project": {
        "post": {
          "operationId": "initProject",
          "summary": "Initialize a new project in the given repo",
          "tags": ["Project"],
          "x-gpt-action": {
            "name": "Initialize Project"
          },
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["project_name", "repo_name", "project_description"],
                  "properties": {
                    "project_name": { "type": "string" },
                    "repo_name": { "type": "string" },
                    "project_description": { "type": "string" }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful project initialization",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": { "type": "string" }
                    },
                    "required": ["message"]
                  }
                }
              }
            },
            "400": {
              "description": "Framework folder missing"
            }
          }
        }
      },
      "/tasks/start": {
        "post": {
          "operationId": "startTask",
          "summary": "Start a task, mark as in_progress, and retrieve prompt + inputs",
          "tags": ["Tasks"],
          "x-gpt-action": {
            "name": "Start Task"
          },
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["task_id", "repo_name"],
                  "properties": {
                    "task_id": { "type": "string" },
                    "repo_name": { "type": "string" }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful task start",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": { "type": "string" },
                      "prompt_content": { "type": "string" },
                      "inputs": {
                        "type": "array",
                        "items": { "type": "string" }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/tasks/append_chain_of_thought": {
        "post": {
          "operationId": "appendChainOfThought",
          "summary": "Append a message to a task's chain_of_thought.yaml file",
          "tags": ["Tasks"],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["repo_name", "task_id", "message"],
                  "properties": {
                    "repo_name": { "type": "string" },
                    "task_id": { "type": "string" },
                    "message": { "type": "string" }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successfully appended chain of thought",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": { "type": "string" },
                      "appended_thought": { "type": "object" }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/tasks/update_changelog/{task_id}": {
        "post": {
          "operationId": "updateChangelog",
          "summary": "Update project CHANGELOG with a new task entry",
          "tags": ["Tasks"],
          "x-gpt-action": {
            "name": "Update Changelog"
          },
          "parameters": [
            {
              "name": "task_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["repo_name", "changelog_message"],
                  "properties": {
                    "repo_name": { "type": "string" },
                    "changelog_message": { "type": "string" }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Changelog updated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": { "type": "string" }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/tasks/complete": {
        "post": {
          "operationId": "completeTask",
          "summary": "Mark task complete and submit reasoning trace and outputs",
          "tags": ["Tasks"],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["repo_name", "task_id"],
                  "properties": {
                    "repo_name": { "type": "string" },
                    "task_id": { "type": "string" },
                    "outputs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": ["path", "content"],
                        "properties": {
                          "path": { "type": "string" },
                          "content": { "type": "string" },
                          "type": { "type": "string" }
                        }
                      }
                    },
                    "reasoning_trace": {
                      "type": "object",
                      "description": "Optional detailed trace of reasoning"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Completion confirmation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": { "type": "string" }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }